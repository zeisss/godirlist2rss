box: golang

build:
  steps:
    - setup-go-workspace
    - script:
        name: go get
        code: |
          go get
          mkdir $WERCKER_OUTPUT_DIR/dist

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    # Build the project
    - script:
        name: go build (linux / ARM6)
        code: |
          GOOS=linux GOARCH=arm GOARM=6 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-arm6 ./...
    - script:
        name: go build (linux / ARM7)
        code: |
          GOOS=linux GOARCH=arm GOARM=7 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-arm7 ./...
    - script:
        name: go build (linux / AMD64)
        code: |
          GOOS=linux GOARCH=amd64 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-amd64 ./...
    - script:
        name: go build (darwin / AMD64)
        code: |
          GOOS=darwin go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-darwin ./...

deploy:
  steps:
    - zeisss/mfs-upload@0.1.3:
        url: $FS_ENDPOINT
        file: ./dist/godirlist2rss-linux-arm6
        path: /artifacts/godirlist2rss/latest/godirlist2rss-linux-arm6
        username: $FS_USER
        password: $FS_PASSWORD
        acl: public-read
    - zeisss/mfs-upload@0.1.3:
        url: $FS_ENDPOINT
        file: ./dist/godirlist2rss-linux-arm7
        path: /artifacts/godirlist2rss/latest/godirlist2rss-linux-arm7
        username: $FS_USER
        password: $FS_PASSWORD
        acl: public-read
    - zeisss/mfs-upload@0.1.3:
        url: $FS_ENDPOINT
        file: ./dist/godirlist2rss-linux-amd64
        path: /artifacts/godirlist2rss/latest/godirlist2rss-linux-amd64
        username: $FS_USER
        password: $FS_PASSWORD
        acl: public-read
    - zeisss/mfs-upload@0.1.3:
        url: $FS_ENDPOINT
        file: ./dist/godirlist2rss-linux-darwin
        path: /artifacts/godirlist2rss/latest/godirlist2rss-linux-darwin
        username: $FS_USER
        password: $FS_PASSWORD
        acl: public-read
