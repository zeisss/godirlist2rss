box: golang

build:
  steps:
    - setup-go-workspace
    - script:
        name: go get
        code: |
          go get
          mkdir $WERCKER_OUTPUT_DIR/dist

    # Build the project
    - script:
        name: go build (linux / ARM6)
        code: |
          GOOS=linux GOARCH=arm GOARM=6 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-arm6 ./...
    - script:
        name: go build (linux / ARM7)
        code: |
          GOOS=linux GOARCH=arm GOARM=7 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-arm7 ./...
    - script:
        name: go build (linux / AMD64)
        code: |
          GOOS=linux GOARCH=amd64 go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-linux-amd64 ./...
    - script:
        name: go build (darwin / AMD64)
        code: |
          GOOS=darwin go build -o $WERCKER_OUTPUT_DIR/dist/godirlist2rss-darwin ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

deploy:
    steps:
        - script:
            name: Upload Build Artifact
            code: |
                test -z "$FS_USER" && fail "Env FS_USER missing."
                test -z "$FS_PASSWORD" && fail "Env FS_PASSWORD missing."
                test -z "$FS_ENDPOINT" && fail "Env FS_ENDPOINT missing."

                name=godirlist2rss
                version=latest
                acl=public-read

                # do the upload
                find ./dist | while read file; do
                  path="/artifacts/${name}/${version}/$(basename $file)"

                  # debug output
                  info "Local file: $(ls -lah $file)"
                  setMessage "Artifact: $(ls -lah $file)"
                  info "ACL: ${acl}"
                  info "Remote path: ${path}"

                  basecurl="curl -sS -u${FS_USER}:${FS_PASSWORD} ${FS_ENDPOINT}"
                  upload=$(${basecurl}${path}.ignore -XPUT --data-binary @$file -H"X-ACL: ${acl}" -H'Content-Type: application/octet-stream' --output $WERCKER_REPORT_ARTIFACTS_DIR/upload_result.json -w '%{http_code}')
                  if [ "$upload" -eq 201 ]; then
                    success "Upload completed."
                  else
                    fail "upload: $(cat $WERCKER_REPORT_ARTIFACTS_DIR/upload_result.json)"
                  fi
                done
